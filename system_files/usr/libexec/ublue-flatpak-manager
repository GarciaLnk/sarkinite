#!/usr/bin/env bash

# Script Version
VER=8
LOCAL_UBLUE_DIR="${XDG_DATA_HOME:-${HOME}/.local/share}/ublue"
VER_FILE="${LOCAL_UBLUE_DIR}/flatpak_manager_version"
VER_RAN=$(cat "${VER_FILE}")

mkdir -p "${LOCAL_UBLUE_DIR}" || exit 1

# Install flatpaks if the list has been updated
ujust install-system-flatpaks "${LOCAL_UBLUE_DIR}/current-flatpaks.list"

# Run script if updated
if [[ -f ${VER_FILE} && ${VER} == "${VER_RAN}" ]]; then
	echo "Flatpak manager v${VER} has already ran. Exiting..."
	exit 0
fi

# Ensure Flathub is enabled
flatpak remote-add --if-not-exists --system flathub /etc/flatpak/remotes.d/flathub.flatpakrepo
flatpak remote-modify --system --enable flathub

# Flatpak theming support
[[ ! -d "${HOME}/.local/share/themes" ]] && mkdir -p "${HOME}/.local/share/themes"
[[ ! -d "${HOME}/.local/share/icons" ]] && mkdir -p "${HOME}/.local/share/icons"
rsync -a /usr/share/themes/ "${HOME}/.local/share/themes/"
rsync -a /usr/share/icons/ "${HOME}/.local/share/icons/"
[[ ! -L "${HOME}/.themes" ]] && ln -s "${HOME}/.local/share/themes" "${HOME}/.themes"
[[ ! -L "${HOME}/.icons" ]] && ln -s "${HOME}/.local/share/icons" "${HOME}/.icons"

flatpak override \
	--filesystem=xdg-config/gtk-4.0:ro \
	--filesystem=xdg-config/gtk-3.0:ro \
	--filesystem=xdg-data/applications:ro \
	--filesystem=xdg-data/themes:ro \
	--filesystem=xdg-data/icons:ro

flatpak override \
	--user \
	--filesystem="${HOME}/.themes":ro \
	--filesystem="${HOME}/.icons":ro

# --env=USE_POINTER_VIEWPORT=1 fixes cursor scaling issues on GTK - remove on F42
flatpak override \
	--env=USE_POINTER_VIEWPORT=1 \
	--env=XDG_CURRENT_DESKTOP=KDE

# Fix printing on LibreOffice
flatpak override \
	--socket=cups \
	--socket=session-bus \
	org.libreoffice.LibreOffice

# Fix permissions for Protontricks
flatpak override \
	--filesystem="${HOME}"/.var/app/com.valvesoftware.Steam/.local/share/Steam \
	--filesystem=/var/mnt \
	--filesystem=/run/media \
	com.github.Matoking.protontricks

# Fixes too many flatpaks to list
flatpak override \
	--socket=session-bus \
	--socket=system-bus \
	--socket=wayland

# Set up Zen default configuration
mkdir -p "/var/lib/flatpak/extension/io.github.zen_browser.zen.systemconfig/$(arch)/stable/defaults/pref"
rm -f "/var/lib/flatpak/extension/io.github.zen_browser.zen.systemconfig/$(arch)/stable/defaults/pref/{*sarkinite*,*arkenfox*,*betterfox*}.js"
/usr/bin/cp -rf /usr/lib64/firefox/defaults/pref/* "/var/lib/flatpak/extension/io.github.zen_browser.zen.systemconfig/$(arch)/stable/defaults/pref/"

# Params needed for HW accelerated video on Nvidia
if [[ $(cat /etc/ublue/image_flavor) =~ "nvidia" ]] && [[ "$(grep -o "\-display" <<<"$(lshw -C display)")" -le 1 ]] && grep -q "vendor: NVIDIA Corporation" <<<"$(lshw -C display)"; then
	flatpak override \
		--env=MOZ_ENABLE_WAYLAND=1 \
		--env=MOZ_DISABLE_RDD_SANDBOX=1 \
		io.github.zen_browser.zen
else
	flatpak override \
		--env=MOZ_ENABLE_WAYLAND=1 \
		--unset-env=MOZ_DISABLE_RDD_SANDBOX \
		io.github.zen_browser.zen
fi

# Use until yafti rework is done
flatpak --system update -y

notify-send "Welcome to Sarkinite" "Your computer is ready!" --app-name="Flatpak Manager Service" -u NORMAL

echo "${VER}" >"${VER_FILE}"
